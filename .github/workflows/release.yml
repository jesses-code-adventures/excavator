name: Release

on:
  release:
    types: [created]

permissions:
    contents: write
    packages: write

jobs:
  check_tag:
    runs-on: ubuntu-latest
    outputs:
      is_version_tag: ${{ steps.tag_check.outputs.is_version_tag }}
      goversion: ${{ steps.set_goversion.outputs.goversion }}
    steps:
      - name: Get the tag name from workflow_run
        id: get_tag
        run: |
          echo "TAG_NAME=${GITHUB_REF_NAME}" >> $GITHUB_ENV
          echo "Ref: $GITHUB_REF"
      - name: Check if tag is a version tag
        id: tag_check
        run: |
          if [[ "${{ env.TAG_NAME }}" =~ ^v[0-9]+\.[0-9]+\.[0-9]+.*$ ]]; then
            echo "is_version_tag=true" >> $GITHUB_ENV
          else
            echo "is_version_tag=false" >> $GITHUB_ENV
          fi
        env:
          TAG_NAME: ${{ github.event.workflow_run.head_commit.message }}
      - name: Determine Go version
        id: set_goversion
        run: |
          if [ "${{ matrix.goos }}" = "darwin" ] && [ "${{ matrix.goarch }}" = "arm64" ]; then
            echo "::set-output name=goversion::https://go.dev/dl/go1.22.0.darwin-arm64.pkg"
          elif [ "${{ matrix.goos }}" = "darwin" ] && [ "${{ matrix.goarch }}" = "amd64" ]; then
            echo "::set-output name=goversion::https://go.dev/dl/go1.22.0.darwin-amd64.pkg"
          fi

  release:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [darwin]
        goarch: [amd64, arm64]
    steps:
    - uses: actions/checkout@v4
    - uses: wangyoucao577/go-release-action@v1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        goos: ${{ matrix.goos }}
        goarch: ${{ matrix.goarch }}
        goversion: ${{ steps.set_goversion.outputs.goversion }}

  homebrew:
    runs-on: ubuntu-latest
    steps:
      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          eval "$(ssh-agent -s)"
          ssh-add ~/.ssh/id_ed25519
          ssh-keyscan github.com >> ~/.ssh/known_hosts
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      - name: clone tap
        run: |
          # Clone the repository
          # ssh -vT git@github.com
          # console=`tty`
          # ln -s $console /dev/tty
          git clone git@github.com:jesses-code-adventures/homebrew-tap.git
          cd homebrew-tap

      - name: replace version tag in url
        run: |
          # Use sed to replace version number in-place without creating a backup file
          sed -i -E "s/v[0-9]+\.[0-9]+\.[0-9]+(-lw)?/${{ needs.check_tag.outputs.is_version_tag }}/g" Formula/excavator.rb
      - name: replace sha256 checksum
        run: |
          # Extract the new URL from the file
          URL=$(grep "url \"" Formula/excavator.rb | sed 's/.*url "\(.*\)".*/\1/')

          # Fetch the tarball and compute its SHA256 hash
          SHA=$(curl -Ls "$URL" | shasum -a 256 | cut -d ' ' -f 1)

          # Use sed to replace the sha256 line in-place
          sed -i "s/sha256 .*/sha256 \"$SHA\"/" Formula/excavator.rb

      - name: set uesr email and name
        run: |
          git config user.email "jesse@negativespacesounds.com"
          git config user.name "GitHub Actions"

      - name: push changes
        run: |
          git add Formula/excavator.rb
          git commit -m "Update excavator to ${{ needs.check_tag.outputs.is_version_tag }}"
          git push origin main # Adjust as needed to your branch name
