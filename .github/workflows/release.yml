name: Release

on:
  release:
    types: [created]

permissions:
    contents: write
    packages: write

jobs:
  check_tag:
    runs-on: ubuntu-latest
    outputs:
      is_version_tag: ${{ steps.tag_check.outputs.is_version_tag }}
      tag_version: ${{ steps.get_tag.outputs.tag_name }} # Corrected for clarity
      goversion: ${{ steps.set_goversion.outputs.goversion }}
    steps:
      - name: Get the tag name from the release
        id: get_tag
        run: |
          echo "Extracted tag name: ${{ github.event.release.tag_name }}" 
          echo "tag_name=${{ github.event.release.tag_name }}" >> $GITHUB_ENV
          echo "Ref: $GITHUB_REF"

      - name: Check if tag is a version tag
        id: tag_check
        run: |
          if [[ "$tag_name" =~ ^v[0-9]+\.[0-9]+\.[0-9]+.*$ ]]; then
            echo "is_version_tag=true" >> $GITHUB_ENV
            echo "Tag is a version tag." 
          else
            echo "is_version_tag=false" >> $GITHUB_ENV
            echo "Tag is not a version tag." 
          fi

      - name: Determine Go version
        id: set_goversion
        run: |
          # Assuming the Go version determination logic is correct
          echo "goversion=correct_go_version_based_on_logic" >> $GITHUB_ENV
      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          eval "$(ssh-agent -s)"
          ssh-add ~/.ssh/id_ed25519
          ssh-keyscan github.com >> ~/.ssh/known_hosts
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Clone tap and update formula
        run: |
          git clone git@github.com:jesses-code-adventures/homebrew-tap.git
          cd homebrew-tap
          git config user.email "jesse@negativespacesounds.com"
          git config user.name "GitHub Actions"
          echo "Updating formula with tag version $tag_name" 
          sed -i -E "s/v[0-9]+\.[0-9]+\.[0-9]+(-lw)?/$tag_name/g" Formula/excavator.rb
          echo "Extracting new URL..." 
          URL=$(grep "url \"" Formula/excavator.rb | sed 's/.*url "\(.*\)".*/\1/')
          echo "URL: $URL"
          echo "Computing new SHA..."
          SHA=$(curl -Ls "$URL" | shasum -a 256 | cut -d ' ' -f 1)
          echo "SHA: $SHA"
          sed -i "s/sha256 .*/sha256 \"$SHA\"/" Formula/excavator.rb
          git add Formula/excavator.rb
          git commit -m "Update excavator to $tag_name"
          git push origin main
